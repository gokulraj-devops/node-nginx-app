{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;\nvar _propTypes = require('prop-types');\nvar PropTypes = _interopRequireWildcard(_propTypes);\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _reactDom = require('react-dom');\nvar _reactDom2 = _interopRequireDefault(_reactDom);\nvar _reactLifecyclesCompat = require('react-lifecycles-compat');\nvar _PropTypes = require('./utils/PropTypes');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar UNMOUNTED = exports.UNMOUNTED = 'unmounted';\nvar EXITED = exports.EXITED = 'exited';\nvar ENTERING = exports.ENTERING = 'entering';\nvar ENTERED = exports.ENTERED = 'entered';\nvar EXITING = exports.EXITING = 'exiting';\n\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the components.\n * It's up to you to give meaning and effect to those states. For example we can\n * add styles to a component when it enters or exits:\n *\n * ```jsx\n * import Transition from 'react-transition-group/Transition';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {(state) => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * As noted the `Transition` component doesn't _do_ anything by itself to its child component.\n * What it does do is track transition states over time so you can update the\n * component (such as by adding styles or classes) when it changes states.\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component begins the\n * \"Enter\" stage. During this stage, the component will shift from its current transition state,\n * to `'entering'` for the duration of the transition and then to the `'entered'` stage once\n * it's complete. Let's take the following example:\n *\n * ```jsx\n * state = { in: false };\n *\n * toggleEnterState = () => {\n *   this.setState({ in: true });\n * }\n *\n * render() {\n *   return (\n *     <div>\n *       <Transition in={this.state.in} timeout={500} />\n *       <button onClick={this.toggleEnterState}>Click to Enter</button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state and\n * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.\n *\n * ## Timing\n *\n * Timing is often the trickiest part of animation, mistakes can result in slight delays\n * that are hard to pin down. A common example is when you want to add an exit transition,\n * you should set the desired final styles when the state is `'exiting'`. That's when the\n * transition to those styles will start and, if you matched the `timeout` prop with the\n * CSS Transition duration, it will end exactly when the state changes to `'exited'`.\n *\n * > **Note**: For simpler transitions the `Transition` component might be enough, but\n * > take into account that it's platform-agnostic, while the `CSSTransition` component\n * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * > in order to make more complex transitions more predictable. For example, even though\n * > classes `example-enter` and `example-enter-active` are applied immediately one after\n * > another, you can still transition from one to the other because of the forced reflow\n * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)\n * > for more info). Take this into account when choosing between `Transition` and\n * > `CSSTransition`.\n *\n * ## Example\n *\n * <iframe src=\"https://codesandbox.io/embed/741op4mmj0?fontsize=14\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>\n *\n */\n\nvar Transition = function (_React$Component) {\n  _inherits(Transition, _React$Component);\n  function Transition(props, context) {\n    _classCallCheck(this, Transition);\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n    var parentGroup = context.transitionGroup;\n    // In the context of a TransitionGroup all enters are really appears\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus = void 0;\n    _this.appearStatus = null;\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n  Transition.prototype.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n    };\n  };\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n    return null;\n  };\n\n  // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n\n  //   return { nextStatus }\n  // }\n\n  Transition.prototype.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n  Transition.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n    this.updateStatus(false, nextStatus);\n  };\n  Transition.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n  Transition.prototype.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit = void 0,\n      enter = void 0,\n      appear = void 0;\n    exit = enter = appear = timeout;\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter;\n      appear = timeout.appear;\n    }\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n  Transition.prototype.updateStatus = function updateStatus() {\n    var mounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var nextStatus = arguments[1];\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n      var node = _reactDom2.default.findDOMNode(this);\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n  Transition.prototype.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n\n    // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      // FIXME: appear timeout?\n      _this2.onTransitionEnd(node, timeouts.enter, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n  Transition.prototype.performExit = function performExit(node) {\n    var _this3 = this;\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n\n    // no exit animation skip right to EXITED\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n  Transition.prototype.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n  Transition.prototype.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n    var active = true;\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n    return this.nextCallback;\n  };\n  Transition.prototype.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    if (node) {\n      if (this.props.addEndListener) {\n        this.props.addEndListener(node, this.nextCallback);\n      }\n      if (timeout != null) {\n        setTimeout(this.nextCallback, timeout);\n      }\n    } else {\n      setTimeout(this.nextCallback, 0);\n    }\n  };\n  Transition.prototype.render = function render() {\n    var status = this.state.status;\n    if (status === UNMOUNTED) {\n      return null;\n    }\n    var _props = this.props,\n      children = _props.children,\n      childProps = _objectWithoutProperties(_props, ['children']);\n    // filter props for Transtition\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n    var child = _react2.default.Children.only(children);\n    return _react2.default.cloneElement(child, childProps);\n  };\n  return Transition;\n}(_react2.default.Component);\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element.\n   * This function is called with the current transition status\n   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used\n   * to apply context specific props to a component.\n   *\n   * ```jsx\n   * <Transition timeout={150}>\n   *   {(status) => (\n   *     <MyComponent className={`fade fade-${status}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided\n   *\n   * You may specify a single timeout for all transitions like: `timeout={500}`,\n   * or individually like:\n   *\n   * ```jsx\n   * timeout={{\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * @type {number | { enter?: number, exit?: number }}\n   */\n  timeout: function timeout(props) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n    return pt.apply(undefined, [props].concat(args));\n  },\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n\n  // Name the function so it is clearer in the documentation\n} : {};\nfunction noop() {}\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\nexports.default = (0, _reactLifecyclesCompat.polyfill)(Transition);","map":{"version":3,"names":["exports","__esModule","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","undefined","_propTypes","require","PropTypes","_interopRequireWildcard","_react","_react2","_interopRequireDefault","_reactDom","_reactDom2","_reactLifecyclesCompat","_PropTypes","obj","default","newObj","key","Object","prototype","hasOwnProperty","call","_objectWithoutProperties","keys","target","i","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Transition","_React$Component","props","context","_this","parentGroup","transitionGroup","appear","isMounting","enter","initialStatus","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getChildContext","getDerivedStateFromProps","_ref","prevState","nextIn","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","exit","mounting","arguments","length","node","findDOMNode","performEnter","performExit","setState","_this2","appearing","timeouts","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExited","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","addEndListener","setTimeout","render","_props","children","childProps","child","Children","only","cloneElement","Component","contextTypes","object","childContextTypes","propTypes","process","env","NODE_ENV","oneOfType","func","isRequired","element","bool","_len","args","Array","_key","pt","timeoutsShape","apply","concat","noop","defaultProps","polyfill"],"sources":["C:/Users/DS/Downloads/simple-reactjs-app/node_modules/react-transition-group/Transition.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactLifecyclesCompat = require('react-lifecycles-compat');\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UNMOUNTED = exports.UNMOUNTED = 'unmounted';\nvar EXITED = exports.EXITED = 'exited';\nvar ENTERING = exports.ENTERING = 'entering';\nvar ENTERED = exports.ENTERED = 'entered';\nvar EXITING = exports.EXITING = 'exiting';\n\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the components.\n * It's up to you to give meaning and effect to those states. For example we can\n * add styles to a component when it enters or exits:\n *\n * ```jsx\n * import Transition from 'react-transition-group/Transition';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {(state) => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * As noted the `Transition` component doesn't _do_ anything by itself to its child component.\n * What it does do is track transition states over time so you can update the\n * component (such as by adding styles or classes) when it changes states.\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component begins the\n * \"Enter\" stage. During this stage, the component will shift from its current transition state,\n * to `'entering'` for the duration of the transition and then to the `'entered'` stage once\n * it's complete. Let's take the following example:\n *\n * ```jsx\n * state = { in: false };\n *\n * toggleEnterState = () => {\n *   this.setState({ in: true });\n * }\n *\n * render() {\n *   return (\n *     <div>\n *       <Transition in={this.state.in} timeout={500} />\n *       <button onClick={this.toggleEnterState}>Click to Enter</button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state and\n * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.\n *\n * ## Timing\n *\n * Timing is often the trickiest part of animation, mistakes can result in slight delays\n * that are hard to pin down. A common example is when you want to add an exit transition,\n * you should set the desired final styles when the state is `'exiting'`. That's when the\n * transition to those styles will start and, if you matched the `timeout` prop with the\n * CSS Transition duration, it will end exactly when the state changes to `'exited'`.\n *\n * > **Note**: For simpler transitions the `Transition` component might be enough, but\n * > take into account that it's platform-agnostic, while the `CSSTransition` component\n * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * > in order to make more complex transitions more predictable. For example, even though\n * > classes `example-enter` and `example-enter-active` are applied immediately one after\n * > another, you can still transition from one to the other because of the forced reflow\n * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)\n * > for more info). Take this into account when choosing between `Transition` and\n * > `CSSTransition`.\n *\n * ## Example\n *\n * <iframe src=\"https://codesandbox.io/embed/741op4mmj0?fontsize=14\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>\n *\n */\n\nvar Transition = function (_React$Component) {\n  _inherits(Transition, _React$Component);\n\n  function Transition(props, context) {\n    _classCallCheck(this, Transition);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    var parentGroup = context.transitionGroup;\n    // In the context of a TransitionGroup all enters are really appears\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n\n    var initialStatus = void 0;\n\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = { status: initialStatus };\n\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.prototype.getChildContext = function getChildContext() {\n    return { transitionGroup: null // allows for nested Transitions\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return { status: EXITED };\n    }\n    return null;\n  };\n\n  // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n\n  //   return { nextStatus }\n  // }\n\n  Transition.prototype.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  Transition.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n    this.updateStatus(false, nextStatus);\n  };\n\n  Transition.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  Transition.prototype.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n\n    var exit = void 0,\n        enter = void 0,\n        appear = void 0;\n\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter;\n      appear = timeout.appear;\n    }\n    return { exit: exit, enter: enter, appear: appear };\n  };\n\n  Transition.prototype.updateStatus = function updateStatus() {\n    var mounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var nextStatus = arguments[1];\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n      var node = _reactDom2.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({ status: UNMOUNTED });\n    }\n  };\n\n  Transition.prototype.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n\n    var timeouts = this.getTimeouts();\n\n    // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n    if (!mounting && !enter) {\n      this.safeSetState({ status: ENTERED }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n\n    this.safeSetState({ status: ENTERING }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      // FIXME: appear timeout?\n      _this2.onTransitionEnd(node, timeouts.enter, function () {\n        _this2.safeSetState({ status: ENTERED }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  Transition.prototype.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n\n    var timeouts = this.getTimeouts();\n\n    // no exit animation skip right to EXITED\n    if (!exit) {\n      this.safeSetState({ status: EXITED }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n    this.props.onExit(node);\n\n    this.safeSetState({ status: EXITING }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({ status: EXITED }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  Transition.prototype.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  Transition.prototype.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  Transition.prototype.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n\n    if (node) {\n      if (this.props.addEndListener) {\n        this.props.addEndListener(node, this.nextCallback);\n      }\n      if (timeout != null) {\n        setTimeout(this.nextCallback, timeout);\n      }\n    } else {\n      setTimeout(this.nextCallback, 0);\n    }\n  };\n\n  Transition.prototype.render = function render() {\n    var status = this.state.status;\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _props = this.props,\n        children = _props.children,\n        childProps = _objectWithoutProperties(_props, ['children']);\n    // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react2.default.Children.only(children);\n    return _react2.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react2.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\n\n\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element.\n   * This function is called with the current transition status\n   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used\n   * to apply context specific props to a component.\n   *\n   * ```jsx\n   * <Transition timeout={150}>\n   *   {(status) => (\n   *     <MyComponent className={`fade fade-${status}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided\n   *\n   * You may specify a single timeout for all transitions like: `timeout={500}`,\n   * or individually like:\n   *\n   * ```jsx\n   * timeout={{\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * @type {number | { enter?: number, exit?: number }}\n   */\n  timeout: function timeout(props) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n    return pt.apply(undefined, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n\n  // Name the function so it is clearer in the documentation\n} : {};function noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\n\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nexports.default = (0, _reactLifecyclesCompat.polyfill)(Transition);"],"mappings":"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OAAO,GAAGH,OAAO,CAACG,OAAO,GAAG,SAAS;AACzC,IAAID,OAAO,GAAGF,OAAO,CAACE,OAAO,GAAG,SAAS;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIgD,UAAU,GAAG,UAAUC,gBAAgB,EAAE;EAC3CZ,SAAS,CAACW,UAAU,EAAEC,gBAAgB,CAAC;EAEvC,SAASD,UAAUA,CAACE,KAAK,EAAEC,OAAO,EAAE;IAClCrB,eAAe,CAAC,IAAI,EAAEkB,UAAU,CAAC;IAEjC,IAAII,KAAK,GAAGlB,0BAA0B,CAAC,IAAI,EAAEe,gBAAgB,CAACzB,IAAI,CAAC,IAAI,EAAE0B,KAAK,EAAEC,OAAO,CAAC,CAAC;IAEzF,IAAIE,WAAW,GAAGF,OAAO,CAACG,eAAe;IACzC;IACA,IAAIC,MAAM,GAAGF,WAAW,IAAI,CAACA,WAAW,CAACG,UAAU,GAAGN,KAAK,CAACO,KAAK,GAAGP,KAAK,CAACK,MAAM;IAEhF,IAAIG,aAAa,GAAG,KAAK,CAAC;IAE1BN,KAAK,CAACO,YAAY,GAAG,IAAI;IAEzB,IAAIT,KAAK,CAACU,EAAE,EAAE;MACZ,IAAIL,MAAM,EAAE;QACVG,aAAa,GAAGvD,MAAM;QACtBiD,KAAK,CAACO,YAAY,GAAGzD,QAAQ;MAC/B,CAAC,MAAM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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}